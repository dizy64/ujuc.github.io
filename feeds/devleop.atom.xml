<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>잘 밤에 쓸데없는 생각하기...</title><link href="http://ujuc.github.io/" rel="alternate"></link><link href="http://ujuc.github.io/feeds/devleop.atom.xml" rel="self"></link><id>http://ujuc.github.io/</id><updated>2015-05-13T22:46:00+09:00</updated><entry><title>Edison 초기 설정</title><link href="http://ujuc.github.io/2015/05/13/edison-%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95/" rel="alternate"></link><updated>2015-05-13T22:46:00+09:00</updated><author><name>ujuc</name></author><id>tag:ujuc.github.io,2015-05-13:2015/05/13/edison-초기-설정/</id><summary type="html">&lt;div class="section" id="yocta-project-update"&gt;
&lt;h2&gt;Yocta Project&amp;nbsp;Update&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;무엇이든 처음 설정할때는 기본 OS먼저 업데이트를 해줘야된다. 최신 Yocta Project
파일을 받아서&amp;nbsp;설치해준다.&lt;/li&gt;
&lt;li&gt;최신이 아니라면 몇몇 기능이 제대로 되지 않아 다시 설치해줘야될 수 도 있으니 꼭&amp;nbsp;하도록하자.&lt;/li&gt;
&lt;li&gt;컴파일을 진행해도 된다만, 시간이 많거나, 꼭 필요한 패키지가 없거나, 기본적으로
설정을 변경해주어야 할때빼고는&amp;nbsp;하지말자.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.intel.com/support/edison/sb/CS-035180.htm"&gt;Yocta 컴파일 이미지&amp;nbsp;다운로드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;&lt;a class="reference external" href="https://software.intel.com/en-us/articles/intel-edison-flashing-firmware-on-os-x-wired"&gt;플래싱&amp;nbsp;순서&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;위의 사진대로 USB를 연결해주고 (2번에&amp;nbsp;연결)&lt;/li&gt;
&lt;li&gt;Edison 외장디스크가 깨끗한지 확인한다.
* 만약 이전의 이미지 내용이 있다면, &lt;tt class="docutils literal"&gt;rm &lt;span class="pre"&gt;-rf&lt;/span&gt; &lt;span class="pre"&gt;Edison/\.*&lt;/span&gt;&lt;/tt&gt; 를 이용하여 모든 내용을 삭제한 다음 받은 이미지를 올리면 된다.
* Edison 파티션의 정보를 확인하여 포멧이 FAT16이라면 디스크 유틸에서 포맷하여 FAT32로&amp;nbsp;변경해주도록.&lt;/li&gt;
&lt;li&gt;다운 받은걸&amp;nbsp;복사하자.&lt;/li&gt;
&lt;li&gt;시리얼 통신으로 Edison에 접근한다.
* &lt;tt class="docutils literal"&gt;screen &lt;span class="pre"&gt;/dev/cu.usbserial-A****&lt;/span&gt; 115200 &lt;span class="pre"&gt;-L&lt;/span&gt;&lt;/tt&gt;
* &lt;tt class="docutils literal"&gt;subserial&lt;/tt&gt; 로 접근을 하면되는데 A뒤의 이름은 변경될 수 있어 작성하지&amp;nbsp;않았다.&lt;/li&gt;
&lt;li&gt;아무런 내용이 안나온다면 들어간 것이니, 엔터&amp;nbsp;두번.&lt;/li&gt;
&lt;li&gt;로그인후 &lt;cite&gt;reboot ota&lt;/cite&gt; 명령어로 재시작.
* &lt;cite&gt;ota&lt;/cite&gt; 로 할 경우, 부팅때 Edison 외장하드에 넣어둔 부팅 이미지들로 새롭게 씌우고 관련 내용들을 업데이트하여 사용할 수 있도록&amp;nbsp;되어있다.&lt;/li&gt;
&lt;li&gt;자세한 내용은 제목에 연결된 링크로 가서 확인하고 작업을&amp;nbsp;진행한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;Edison&amp;nbsp;구성&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;기본 구성을 하는데 필요한 명령어는 &lt;tt class="docutils literal"&gt;configure_edison&lt;/tt&gt; 으로 작업을 구성하도록&amp;nbsp;한다.&lt;/li&gt;
&lt;li&gt;전체 설정을 다 변경하고 싶으면 &lt;tt class="docutils literal"&gt;configure_edison &lt;span class="pre"&gt;--setup&lt;/span&gt;&lt;/tt&gt; 이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="hostname"&gt;
&lt;h3&gt;Hostname&lt;/h3&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# configure_edison --name&lt;/span&gt;
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;다음에 나오는 것들에따라서 입력해주면&amp;nbsp;된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="wifi"&gt;
&lt;h3&gt;Wifi&lt;/h3&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# configure_edison --wifi&lt;/span&gt;
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;근처에 있는 Wifi들이 다 잡힐 것이나 만약 아무것도 안보인다면 firmware를 업그레
이드 한 뒤에 다시 명령어를 입력하여&amp;nbsp;확인하도록하자.&lt;/li&gt;
&lt;li&gt;버전업이 안되어있는 경우, 잡지&amp;nbsp;못하더라.&lt;/li&gt;
&lt;li&gt;설정이 완료되고 나면 URL을 보여주니 그것을 이용하여 접근하면&amp;nbsp;된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="ssh"&gt;
&lt;h3&gt;&lt;span class="caps"&gt;SSH&lt;/span&gt;&amp;nbsp;설정&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Screen으로 시리얼 접근하는 것은 사용하기가&amp;nbsp;불편하다.&lt;/li&gt;
&lt;li&gt;비밀번호를 설정해주게되면 SSH로 접근이 가능하게 되니 그부분을 추가하여 작업을
진행하도록&amp;nbsp;한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# configure_edison --password&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="package"&gt;
&lt;h2&gt;Package&amp;nbsp;관리자&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Edison은 opkg(OpenPackaGe Managemet)라는 비교적 가벼운 패키지 관리자를 사용한
다고 한다. 몇몇 설정이 그렇게 되어있었다. (Yocta Projectdp서 사용하는데,
OpenWRT에서 사용하고&amp;nbsp;있다.)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;패키지 관리자 설치 및&amp;nbsp;설정&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://software.intel.com/en-us/articles/managing-devkit-libraries-intel-edison-or-intel-galileo-board"&gt;Intel&amp;nbsp;page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# echo &amp;quot;src intel-iotdk http://iotdk.intel.com/repos/1.1/intelgalactic&amp;quot; &amp;gt; \
&lt;/span&gt;    /etc/opkg/intel-iotdk.conf# opkg update&lt;span class="p"&gt;;&lt;/span&gt; opkg upgrade
&lt;span class="c"&gt;# opkg update; opkg upgrade&lt;/span&gt;
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;이렇게하면 기본적인 것들은 추가가 된다만 패키지가 많지는&amp;nbsp;않다.&lt;/li&gt;
&lt;li&gt;더 많은 패키지를 사용하려면 레포지토리를 추가해줘야&amp;nbsp;된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# vi /etc/opkg/base-feeds.conf
&lt;/span&gt;
src/gz all http://repo.opkg.net/edison/repo/all
src/gz edison http://repo.opkg.net/edison/repo/edison
src/gz core2-32 http://repo.opkg.net/edison/repo/core2-32

&lt;span class="c"&gt;# opkg update&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Edison"></category><category term="개발"></category><category term="Embedded"></category><category term="임베디드"></category><category term="Intel"></category><category term="IoT"></category></entry></feed>